<document>
	<date>2011-06-30</date>
        <title>
Vera: Programmer une simulation de prsence</title>
        <author>Cdric Locqueneux</author>
        <tags_set>
                <tag>securite</tag>
                <tag>vera</tag>
        </tags_set>
        <categories_set>
                <category>Guides Securite</category>
        </categories_set>
        <text>Nous avons vu hier  comment programmer une simulation de presence dans le logiciel Homeseer . Tres peu de logiciels integrent cette fonction, ce qui a mon avis est fort dommage. Toutefois, sur certains, la possibilite decrire des scripts permet de palier a ce manque. Nous allons donc voir aujourdhui comment gerer une simulation de presence sur la  Vera . Le principe de la simulation de presence est deffectuer certaines actions, a un moment qui ne soit pas toujours le meme chaque jour, ceci afin de faire croire a lexterieur que la maison est habitee. Si on programme lallumage dune lampe par exemple tous les jours a 22h, il ne faudra pas longtemps pour remarquer que cette lumiere est tout le temps allumee a la meme heure, et donc soupconner une programmation automatique. Bien sur, on pourrait creer un scenario avec une heure differente pour chaque jour: cest lourd a parametrer, et au bout dun certain temps on peut egalement sapercevoir de la regularite de ces actions. Nous allons donc passer par un petit script en Lua,  trouve sur le forum de Micasaverde , qui remplit parfaitement cette fonction. Au premier abord il peut sembler complexe, mais il est au final tres simple a utiliser. Nous allons etudier deux cas: lallumage de la lumiere la nuit, et la diffusion de musique la journee.  
 I. Gestion de la lumiere  Nous allons faire sallumer une lampe, a une certaine heure, sil fait nuit uniquement. Elle sallumera a lheure indiquee + un delta aleatoire, sallumera un temps donne + un delta aleatoire, pour ensuite seteindre toute seule. Pour que cela soit automatique, je veux que le scenario sexecute si lalarme est activee. Le scenario a creer sur la  Vera  est relativement simple, puisque tout va se gerer dans le script Lua. On va donc simplement creer un scenario, avec un calendrier pour determiner lheure du declenchement, par exemple ici tous les jours a 21h:   Ensuite, on va renseigner notre script dans longlet Luup:   Bon, on va decortiquer un peu le script: Tout dabord, on verifie si lalarme est activee, en recuperant le statut dun device reel ou virtuel (id quon peut recuperer sur longlet avance du device en question). Ici, je verifie si le capteur de ma porte dentree est arme, ce qui signifie que lalarme est activee, et donc la maison inoccupee:  local house_occupied=luup.variable_get(urn: micasaverde -com:serviceId:SecuritySensor1,Armed,45)  Si la maison est occupee ou qu il ne fait pas nuit, on sort du scenario (on ne lexecute pas)  if (house_occupied == 0) or not ( luup.is_night() ) then return false end  Ensuite, on indique le device a activer (ici le 18), puis on regle en secondes les variables pour les actions aleatoires (dans lordre: delta pour lallumage, temps minimum dallumage, et delta pour lextinction)  local Device3 = 18 local RandOnTime3 = 3600 local On3 = 1000 local RandOffTime3 = 600  On calcule des valeurs aleatoires comprises dans lintervalle donne precedemment:  local RanNumbOn3 = (math.random() * RandOnTime3 ) local RanNumbOff3 = (math.random() * RandOffTime3 )  On cree la fonction dallumage, qui se chargera dallumer la lumiere a lheure definie  function DelayOn3() luup.call_action(urn:upnp-org:serviceId:SwitchPower1,SetTarget,{ newTargetValue=1},Device3) luup.call_timer(StayOn3, 1, On3 , , ) end  On cree la fonction qui declenchera lextinction a lheure calculee  function StayOn3() luup.call_timer(DelayOff3, 1, RanNumbOff3, , ) end  On cree la fonction qui eteindra effectivement le device  function DelayOff3() luup.call_action(urn:upnp-org:serviceId:SwitchPower1,SetTarget,{ newTargetValue=0},Device3) end  Enfin, on lance la simulation en elle meme, qui va se programmer a lheure calculee aleatoirement:  luup.call_timer(DelayOn3, 1 , RanNumbOn3,,)  Dans cet exemple, la lampe correspondant au device 18 va sallumer entre 21h et 22h (21h + 3600 secondes), rester eclairee au moins 16min (1000 secondes), et seteindre entre 16 min et 26 min (1000 secondes + 600 secondes). Dans les faits, jai ainsi obtenu cela: Lundi: Allumee a 21h03, extinction a 21h22 Mardi: Allumee a 21h37, extinction a 22h01 Mercredi: Allumee a 21h14, extinction a 21h36 etc De lexterieur, difficile de savoir si cest programme ou si cest reellement quelquun ! Telecharger le script complet  
 II. Gestion de la musique  Allumer des lumieres la nuit, cest bien, mais la journee ? Et bien la journee, je diffuse de la musique, une webradio que jecoute souvent pour les enfants (Disney), a des heures ou jai lhabitude de lecouter, mais avec un petit delta aleatoire comme pour les lumieres. Quand on a compris le fonctionnement du script, il est assez facile a adapter pour piloter dautres choses. Le principe est le meme: on cree un scenario, avec un calendrier ou on defini les heures de lancement du scenario. Ensuite, on complete longlet Luup avec notre script, que nous allons expliquer egalement. Comme pour la lumiere, je veux que le script sexecute automatiquement si lalarme est activee: si le detecteur de porte dentree est arme, cela veut dire que lalarme est activee, et que la maison nest pas occupee  local house_occupied=luup.variable_get(urn: micasaverde -com:serviceId:SecuritySensor1,Armed,45)  Si la maison est occupee, on sort du scenario (on ne lexecute pas). On ne verifie pas ici sil fait nuit, le scenario peut sexecuter nimporte quand.  if (house_occupied == 0) then return false end  On regle en secondes les variables pour les actions aleatoires. Ici, jai mis une heure partout (3600 secondes): la musique se lancera entre lheure definie dans le calendrier et cette heure + 1 heure, se fera entendre pendant 1 heure minimum, et seteindra dans les 60 minutes qui suivent.  local RandOnTime2 = 3600 local On2 = 3600 local RandOffTime2 = 3600  On calcule les valeurs aleatoires dans la fourchette indiquee precedemment  local RanNumbOn2 = (math.random() * RandOnTime2 ) local RanNumbOff2 = (math.random() * RandOffTime2 )  On cree la fonction qui lancera la musique. On utilise ici les API de la Squeezebox:  function DelayOn2() socket=require(socket) local client = socket.connect(192.168.5.8, 9090)  = on indique ladresse IP de son serveur Squeezebox client:send(00:04:20:27:d9:d1 power 1\n)  = on allume la Squeezebox correspondant a cette adrese MAC local result=client:receive() client:send(00:04:20:27:d9:d1 mixer volume 90\n)  = on regle le volume de cette Squeezebox a 90%, histoire de lentendre un peu de lexterieur local result=client:receive() client:send(00:04:20:27:d9:d1 playlist play http://opml.radiotime.com/Tune.ashx?id=s129490formats=aac,ogg,mp3,wmpro,wma,wmvoicepartnerId=16serial=561b209f37d5ef48d13b29e00b0fc47e\n)  = on lance la lecture de la webradio en indiquant le lien web local result=client:receive() luup.call_timer(StayOn2, 1, On2 , , ) end  On cree la fonction qui se chargera de lextinction aleatoire  function StayOn2() luup.call_timer(DelayOff2, 1, RanNumbOff2, , ) end  Puis on cree la fonction qui arretera la lecture sur la Squeezebox:  function DelayOff2() socket=require(socket) local client = socket.connect(192.168.5.8, 9090) =on indique ladresse IP de son serveur Squeezebox client:send(00:04:20:27:d9:d1 mixer volume 50\n)  = on repasse le volume a 50% histoire de ne pas avoir de surprise a la prochaine ecoute client:send(00:04:20:27:d9:d1 power 0\n)  = puis on eteint la Squeezebox correspondant a cette adresse MAC local result=client:receive() end  Enfin, on lance la simulation en elle meme  luup.call_timer(DelayOn2, 1 , RanNumbOn2,,)  En reglant le calendrier a 12h, par exemple, la musique va se lancer quelque part entre 12h et 13h, etre lue pendant au minimum 1 heure, puis seteindre toute seule dans les 60 minutes qui suivent. Avec un tel delta, on a vraiment de laleatoire :p Je lance ici une webradio, ce qui permet davoir quelque chose qui change souvent (a lecoute), mais on pourrait tout aussi bien lancer une playlist, ou pourquoi pas, un enregistrement de sa propre voix en train de discuter ;-) Telecharger le script complet  
 III. Conclusion  Jai utilise cette simulation durant mes deux semaines de vacances, et cela fonctionne vraiment bien, a tel point que les voisins nont pas trop fait attention que nous etions partis. Avec les volets qui souvrent automatiquement chaque jour, la musique diffusee la journee, et des lampes qui sallument le soir, leffet est plutot reussi. On peut ainsi creer autant de scenarios quon souhaite, comme je lai fait:   Attention, toutefois, pour faire cela, a bien modifier les differentes variables dans les scripts (Device3,RandOnTime3,On3,RandOffTime3,RanNumbOn3,RanNumbOff3) ainsi que le nom des fonctions (DelayOn3,StayOn3,DelayOff3), sinon vos parametres vont passer dun scenario a lautre, et vous risquez davoir des surprises. Personnellement, jincremente le chiffre a la fin a chaque scenario (1,2, 3, etc).   securite   vera 
        </text>
</document>
