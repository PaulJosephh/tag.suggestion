<document>
	<date>2013-06-24</date>
        <title>Comprendre le brevet logiciel</title>
        <author>Fran&#231;ois Charlet</author>
        <tags_set>
                <tag>Droit des brevets</tag>
                <tag>Logiciel libre</tag>
                <tag>Propri&#233;t&#233; intellectuelle</tag>
        </tags_set>
        <categories_set>
                <category>Droit</category>
        </categories_set>
        <text>
                                                
                                                         Le droit des brevets n'est pas ais&#233; &#224; comprendre, et jouit d'une r&#233;putation peu flatteuse aupr&#232;s du public. Il est pourtant n&#233;cessaire pour l'&#233;conomie et les entreprises. Dans le domaine informatique par contre, les lev&#233;es de boucliers sont fr&#233;quentes afin de militer contre la possibilit&#233; de breveter les logiciels. Qu'en est-il vraiment&#160;? C'est ce que je vais essayer d'expliquer. 
 Quelques notions de droit des brevets 
 Le droit des brevets d'invention (Erfindungspatent&#160;; Patent) est une branche du droit de la propri&#233;t&#233; intellectuelle. Comme le droit d'auteur ou le droit des marques, le droit des brevets institue un droit de type monopolistique&#160;: on parlera en g&#233;n&#233;ral d'un droit exclusif sur l'oeuvre, la marque ou, dans le cas du brevet, sur l'invention. 
 En Suisse, la protection des inventions est assur&#233;e par la LBI, la  loi f&#233;d&#233;rale sur les brevets d'invention  (RS 232.14). Au niveau europ&#233;en et international, plusieurs conventions concernent le domaine des brevets, notamment&#160;: la  Convention de Paris , le  Trait&#233; de coop&#233;ration en mati&#232;re de brevets  (PCT), la  Convention sur la d&#233;livrance de brevets europ&#233;ens  (Convention de Munich), l' Accord sur les aspects des droits de propri&#233;t&#233; intellectuelle qui touchent au commerce  (ADPIC), le " paquet brevet " (deux r&#232;glements et un accord international posant les bases pour la cr&#233;ation de la protection par brevet unitaire dans l&#8217;Union europ&#233;enne). Le droit de la propri&#233;t&#233; intellectuelle reste donc essentiellement r&#233;gl&#233; par le droit national de chaque &#201;tat, qui ne d&#233;ploie pas d'effets juridiques &#224; l'&#233;tranger. Le principe de la territorialit&#233; est donc applicable, sous r&#233;serve des conventions internationales applicables. 
 Le brevet est un certificat officiel accord&#233; par l'&#201;tat et qui octroie &#224; l'auteur d'une invention le droit exclusif d'exploiter cette invention pendant un certain temps. N&#233;anmoins, l'&#201;tat ne garantit rien, dans le sens o&#249; la d&#233;livrance du brevet n'est pas une condition suffisante pour que la protection soit effective et opposable &#224; tous. Le brevet doit fournir une description de l'invention afin qu'un homme du m&#233;tier puisse la r&#233;aliser. Le brevet est publi&#233; pour que chacun puisse en prendre connaissance. Cela permet &#224; l'auteur de l'invention d'&#234;tre prot&#233;g&#233; et la collectivit&#233; peut prendre connaissance de l'invention (cela &#233;vite qu'elle reste secr&#232;te) et d&#233;velopper de nouvelles inventions une fois la p&#233;riode de protection &#233;chue. 
 Pour pouvoir &#234;tre brevet&#233;e, une invention doit remplir certaines conditions. Tout d&#8217;abord, la loi ne doit pas interdire la brevetabilit&#233; de l&#8217;invention en question. Ensuite, l&#8217;invention doit avoir une utilit&#233; pratique, comporter un &#233;l&#233;ment de nouveaut&#233; &#8211; autrement dit une caract&#233;ristique nouvelle qui ne fait pas partie de l&#8217;&#233;tat de la technique. Enfin, l&#8217;invention n&#233;cessite qu&#8217;une activit&#233; inventive ait &#233;t&#233; d&#233;ploy&#233;e, c&#8217;est-&#224;-dire qu&#8217;elle ne doit pas &#234;tre &#233;vidente pour une personne ayant une connaissance moyenne du domaine technique en question. 
 L'invention est une  r&#232;gle  : elle indique ce qu'il faut faire pour arriver &#224; un r&#233;sultat. L'invention a donc un caract&#232;re abstrait&#160;: ce n'est pas le r&#233;sultat, ou le produit, mais la r&#232;gle expliquant les &#233;tapes n&#233;cessaires pour arriver au produit. Ainsi, l'invention doit conduire au m&#234;me r&#233;sultat, &#224; chaque fois qu'elle est ex&#233;cut&#233;e (on appelle cela le principe de reproductibilit&#233;) ; d'o&#249; la n&#233;cessit&#233; qu'elle soit pr&#233;cis&#233;ment d&#233;crite dans le brevet. 
 L'invention est en fait une r&#232;gle  technique  qui doit indiquer comment maitriser les "forces de la nature ou &#233;l&#233;ments naturels" pour les soumettre &#224; l'humain. 
 On exclut cependant de la technique les "indications &#224; l'esprit humain" comme la mani&#232;re de pr&#233;senter une information, la d&#233;couverte scientifique, une formule math&#233;matique, une r&#232;gle de statistique, les programmes d'ordinateur, etc. Pourtant, l'application pratique de ces &#233;l&#233;ments peut constituer une invention. 
 Le logiciel 
 L'informatique est un domaine complexe, raison pour laquelle il faut clairement d&#233;finir ce que d&#233;signe le terme "logiciel". De plus, un logiciel a la particularit&#233; de comprendre des &#233;l&#233;ments prot&#233;geables par les brevets et d'autres par le droit d'auteur. 
 Un  logiciel  est une s&#233;rie d'instructions &#233;crites dans un langage informatique et destin&#233;es &#224; &#234;tre ex&#233;cut&#233;es par un ordinateur afin qu'il r&#233;alise des op&#233;rations qui sont d&#233;finies par un algorithme. 
 Alors que l'id&#233;e de base ne peut pas &#234;tre prot&#233;g&#233;e, l'algorithme du logiciel cherche &#224; apporter une solution technique au probl&#232;me pos&#233;. L'algorithme constitue donc en une sorte de description des op&#233;rations &#224; r&#233;aliser. C'est donc potentiellement une r&#232;gle qui pourrait &#234;tre brevet&#233;e. Le logiciel est ensuite &#233;crit dans un langage de programmation pour former ce qu'on appelle le code source&#160;; il constitue l'expression de l'algorithme. Ce code est normalement prot&#233;g&#233; par le droit d'auteur qui ne conf&#232;re sa protection que sur l'expression elle-m&#234;me. (Ainsi, un logiciel dans son ensemble est couvert par le droit d'auteur de mani&#232;re &#224; ce que son auteur puisse d&#233;cider de la mani&#232;re dont il sera diffus&#233; et utilis&#233;. Cela a permis de voir &#233;merger les licences libres et autres Creative Commons.) 
 Il faut se rendre compte que la protection offerte par un brevet est bien plus &#233;tendue que celle du droit d'auteur. Ce dernier s'applique &#224; la mani&#232;re dont est "exprim&#233;" le logiciel (son code source) alors que le brevet concerne essentiellement l'algorithme et ce dernier peut &#234;tre exprim&#233; de nombreuses fa&#231;ons par un code source. 
 Le brevet logiciel 
 Selon l' art. 52  de la Convention sur le brevet europ&#233;en (CBE&#160;; &#224; laquelle la Suisse est partie), 
 
 ne sont pas consid&#233;r&#233;s comme des inventions [&#8230;] les programmes d'ordinateur. 
 
 Le texte est donc tr&#232;s clair&#160;:  les logiciels ne sont pas brevetables . Alors pourquoi ce d&#233;bat sur le brevet logiciel&#160;? Comme le souligne l'Office europ&#233;en des brevets (OEB), le terme est trompeur. Un logiciel en tant que tel ne peut pas &#234;tre brevet&#233; : Microsoft Office ou Google Chrome ne peuvent pas faire l'objet d'un brevet. 
 Cependant,  on peut breveter une invention qui est mise en oeuvre par ordinateur  si elle r&#233;sout un probl&#232;me technique de mani&#232;re non &#233;vidente. Certaines caract&#233;ristiques de l'invention sont r&#233;alis&#233;es (totalement ou partiellement) par un logiciel. Il serait choquant qu'on rejette une demande de brevet d'une invention r&#233;pondant &#224; toutes les conditions l&#233;gales simplement parce qu'elle utilise un logiciel pour fonctionner. 
 Selon la jurisprudence de l'OEB, un 
 
 programme d'ordinateur n'est pas exclu de la brevetabilit&#233; en application de l' art. 52 CBE  si sa mise en &#339;uvre sur un ordinateur produit un  effet technique suppl&#233;mentaire , allant au-del&#224; des interactions physiques "normales" entre programme (logiciel) et ordinateur (mat&#233;riel). 
 
 L'adjectif "suppl&#233;mentaire" est ajout&#233;, car un logiciel produit n&#233;cessairement des interactions physiques normales (tensions, courants &#233;lectriques, etc.) sur le mat&#233;riel sur lequel il agit. Alors quel est cet effet technique suppl&#233;mentaire&#160;? 
 Selon les  directives  de l'OEB, 
 
 un  effet technique suppl&#233;mentaire  susceptible de conf&#233;rer un caract&#232;re technique &#224; un programme d'ordinateur peut r&#233;sider, par exemple, dans la commande d'un processus industriel, dans le traitement de donn&#233;es repr&#233;sentant des entit&#233;s physiques ou dans le fonctionnement interne de l'ordinateur proprement dit ou de ses interfaces sous l'influence du programme et peut, par exemple, avoir une incidence sur l'efficacit&#233; ou la s&#233;curit&#233; d'un proc&#233;d&#233;, sur la gestion des ressources informatiques n&#233;cessaires ou bien encore sur le d&#233;bit de transfert des donn&#233;es dans une liaison de communication. 
 
 La complexit&#233; du logiciel n'est pas un crit&#232;re permettant d'&#233;tablir un effet technique suppl&#233;mentaire. 
 Adversaires et partisans du "brevet logiciel" 
 Les opposants &#224; la brevetabilit&#233; des logiciels ont plusieurs arguments. Tout d'abord, un logiciel &#233;tant immat&#233;riel, il ne devrait pas &#234;tre soumis &#224; la brevetabilit&#233; si on admet que le crit&#232;re de la technicit&#233; implique de recourir &#224; des forces de la nature contr&#244;lables pour obtenir des r&#233;sultats dans le monde mat&#233;riel. 
 &#192; l'inverse, les partisans souhaitent pouvoir prot&#233;ger leur logiciel au vu de la pr&#233;sence de plus en plus importante des logiciels dans les innovations, le droit d'auteur n'offrant pas une protection ad&#233;quate (cf. ci-dessus). 
 Ensuite, les opposants soutiennent que les progr&#232;s et innovations dans le domaine des logiciels se font de mani&#232;re incr&#233;mentale&#160;: toute avanc&#233;e repose sur la pr&#233;c&#233;dente. Si celle-ci est brevet&#233;e, l'avanc&#233;e suivante ne pourrait avoir lieu avant la fin de la validit&#233; du brevet, ce qui poserait de nombreux probl&#232;mes. Pour n'en citer qu'un, la dur&#233;e de vie d'un logiciel est relativement courte (quelques ann&#233;es en g&#233;n&#233;ral) alors que le brevet est valable pour vingt ans. L'avantage concurrentiel et le frein &#224; l'innovation seraient cons&#233;quents. Le logiciel libre en souffrirait. 
 De leur c&#244;t&#233; les partisans affirment qu'un brevet ne prot&#232;ge qu'une solution technique qu'on apporte &#224; un probl&#232;me technique donn&#233;. Rien n'emp&#234;cherait de trouver une autre solution technique et de la faire breveter, sans qu'elle d&#233;pende de la premi&#232;re qui serait d&#233;j&#224; brevet&#233;e. 
 De mani&#232;re g&#233;n&#233;rale, les opposants affirment qu'un brevet sur les logiciels freinerait l'innovation dans le domaine et privatiserait les id&#233;es, emp&#234;chant d'autres personnes d'&#233;crire des logiciels compatibles avec ceux qui sont brevet&#233;s. Sur la plan &#233;conomique, actuellement, un investisseur qui mettrait son argent dans un logiciel est s&#251;r de pouvoir le commercialiser, alors qu'il verrait diminuer l'int&#233;r&#234;t de l'investissement s'il peut se retrouver attaqu&#233; et voir le logiciel interdit de vente. 
 &#192; l'inverse, il est important pour les partisans de pouvoir s&#233;curiser juridiquement leurs investissements incorporels. Avec la globalisation des march&#233;s, pouvoir justifier d'un portefeuille de brevets est un avantage permettant de mettre en valeur leur position sur le march&#233;. La protection juridique d'une technologie lui apporte une plus-value importante. 
 Au moins un ajustement n&#233;cessaire 
 Si l'on voulait rendre un logiciel brevetable "en tant que tel", il faudrait au moins cr&#233;er une exception l&#233;gale. Comme cela a &#233;t&#233; mentionn&#233; plus haut, la dur&#233;e du brevet classique est de vingt ans et cette dur&#233;e ne correspond pas avec la dur&#233;e de vie d'un logiciel. Pour r&#233;duire la position de monopole du concepteur original, et pour conserver le but originel du brevet (prot&#233;ger les investissements de base pour les rentabiliser, favoriser l'innovation sans trop mettre en danger la concurrence), il faudrait r&#233;duire la dur&#233;e de validit&#233; du brevet sur le logiciel. Cependant, vu le temps mis par les offices pour examiner les demandes et octroyer le brevet (plusieurs ann&#233;es), cette possibilit&#233; reste assez th&#233;orique pour le moment. 
 D'autres modifications syst&#233;miques devraient aussi &#234;tre  envisag&#233;es  de mani&#232;re plus globale. 
 Difficult&#233;s pratiques 
 Comment savoir ce qui est nouveau de ce qui ne l'est pas, ou, autrement dit, comment &#233;tablir l'&#233;tat de la technique ant&#233;rieur&#160;? 
 L'innovation dans le domaine informatique est tr&#232;s rapide. Elle progresse trop vite et lorsque l'examinateur doit se pencher sur la demande de brevet logiciel, il faudra qu'il se replace dans la situation au moment de la demande (ce qui peut demander de remonter plusieurs mois voire un &#224; deux ans en arri&#232;re). La diffusion actuelle des avanc&#233;es logicielles implique qu'elles sont &#233;galement vite reprises, banalis&#233;es. 
 Les r&#232;gles actuelles n'obligent pas les offices de brevets &#224; faire des recherches sur l'&#233;tat de la technique d'un logiciel s'ils ne sont pas &#233;quip&#233;s pour le faire (reverse engineering, etc.). C'est ce que dit la  r&#232;gle 39  du R&#232;glement d'ex&#233;cution du Trait&#233; de coop&#233;ration en mati&#232;re de brevets (PCT) : 
 
 Aucune administration charg&#233;e de la recherche internationale n'a l'obligation de proc&#233;der &#224; la recherche &#224; l'&#233;gard d'une demande internationale dont l'objet, et dans la mesure o&#249; l'objet, est l'un des suivants&#160;: [&#8230;] programmes d'ordinateurs dans la mesure o&#249; l'administration charg&#233;e de la recherche internationale n'est pas outill&#233;e pour proc&#233;der &#224; la recherche de l'&#233;tat de la technique au sujet de tels programmes. 
 
 En outre, la conception d'un logiciel n'est pas n&#233;cessairement bien document&#233;e et il est difficile de retrouver les id&#233;es de base de l'inventeur. Le logiciel est en plus &#233;crit dans un langage cod&#233; que seul un informaticien comprend. On ne trouve pas forc&#233;ment des articles d'ing&#233;nierie informatique permettant d'appr&#233;cier si l'innovation en est bien une. Bref, les examinateurs des offices de brevet ne sont pas dans une situation facile pour d&#233;terminer si un logiciel constitue une innovation ou non. 
 Conclusion 
 S'il est ais&#233;ment concevable que les PME ou grandes soci&#233;t&#233;s voient de nets avantages (notamment juridiques et &#233;conomiques) &#224; ce que les logiciels qu'elles d&#233;veloppent soient prot&#233;g&#233;s par un brevet, on comprend aussi les inqui&#233;tudes des opposants qui ne voient pas d'un bon oeil la possibilit&#233; de breveter les logiciels, en tout cas dans les conditions l&#233;gales actuelles. 
 L'interpr&#233;tation des bases juridiques ne pose pas un probl&#232;me&#160;: tant qu'un logiciel, seul, ne peut pas &#234;tre brevet&#233;, les r&#232;gles sont respect&#233;es. Aux &#201;tats-Unis, la Cour Supr&#234;me n'a pas banni les logiciels du domaine des brevets, mais ne les a pas explicitement exclus. Les Cours am&#233;ricaines semblent accorder de plus en plus de recours contre des brevets logiciels, notamment au motif qu'on ne peut breveter un concept abstrait auquel on a "simplement ajout&#233; des fonctionnalit&#233;s informatiques standard". N&#233;anmoins, le flou juridique reste entier aux &#201;tats-Unis et il faudrait r&#233;viser le Patent Act ou attendre que la Cour Supr&#234;me  d&#233;finisse  enfin quelques crit&#232;res. 
 L'Allemagne a d&#233;j&#224; fait ce pas suppl&#233;mentaire. Le 7 juin, le Bundestag a adopt&#233; une  motion  visant &#224; assurer la concurrence et la dynamique d'innovation dans le domaine des logiciels en limitant la brevetabilit&#233; des logiciels ( Tagesordnungspunkt 23 ). 

                                                        
                                                                                                        
                                                 
        </text>
</document>
