<document>
	<date>2013-05-31</date>
        <title>Recupration des tempratures de votre Home Center 2 Fibaro sous ThingSpeak</title>
        <author>Olivier VALETTE </author>
        <tags_set>
                <tag>fibaro</tag>
                <tag>HC 2</tag>
                <tag>Home Center 2</tag>
                <tag>ThingSpeak</tag>
                <tag>z-wave</tag>
        </tags_set>
        <categories_set>
                <category>Actualite</category>
                <category>Box Domotique</category>
                <category>Tutoriel</category>
        </categories_set>
        <text>
                                        
                                        
                                        
 
 
 
 
 
 
(adsbygoogle = window.adsbygoogle || []).push({});
 
 
 et 
 
  
  
 Dans un  precedent article  nous avions vu comment remonter les temperatures de notre capteur  Enocean  avec la  Zibase  sous ThingSpeak. Aujourdhui nous allons voir comment faire avec votre Home Center 2 de  Fibaro . 
 
 Comme je vous lavais montre, jai cree deux sondes de temperature avec mon module  Universal Sensor Fibaro  (une sonde donnant la temperature de la piscine et lautre donnant la temperature ambiante a lexterieur de la piscine (leau nest pas tres chaude en ce 31 mai 2013). 
 
 Jai donc decide de creer un releve des temperatures a laide de ThingSpeak. 
 La premiere des choses a faire est de creer son compte (cest un service gratuit) et creer un Channel. 
 
  
 Il faut personnaliser votre Channel, pour cela jai renseigne Fields1 et Fields2 afin de recuperer les temperatures de la piscine et les temperatures ambiantes autour de la piscine. 
 
 En suite il vous faut recuperer lAPI Key de ThingSpeak 
 
 Ladresse de lAPI : 
 
 http://api.thingspeak.com 
 
 Maintenant que nous avons recupere notre API Key, nous allons nous rendre dans notre box Fibaro afin de creer un Device Virtuel 
 
 Dans longlet Avance du peripherique virtuel, nous allons ecrire quelques lignes de code Lua 
 thingspeak = Net.FHttp(api.thingspeak.com)  
 local temp1 = fibaro:getValue(09, value)  
 local temp2 = fibaro:getValue(10, value)  
 payload = key=JGSXVPLVxxxxxxxxfield1= .. temp1.. field2= .. temp2 
 response, status, errorCode = thingspeak:POST(/update, payload)  
 fibaro:log(les temperatures ont ete envoyees); 
  
 Decortiquons 
 La 1ere ligne permet dutiliser lAPI de ThingSpeak 
 La 2eme ligne permet de recuperer la valeur de lID n9 (soit le device de la Temperature de la piscine) 
 La 3eme ligne permet de recuperer la valeur de lID n10 (soit le device de la Temperature ambiante autour de la piscine) 
 La 4eme ligne permet dutiliser lAPI a laide de sa cle (Key) ; Field1 permettra de recuperer la valeur de temp1 et Field2 permettra de recuperer la valeur de temp2. 
 Ces valeurs seront donc remontees dans ThingSpeak. 
 La 5eme ligne fibaro:log permettra dafficher un petit message signifiant que les temperatures ont bien ete envoyees. 
 
  
 cest ok, vous pouvez maintenant envoyer vos temperatures, mais pour cela nous allons creer une scene permettant dautomatiser lenvoi des donnees automatiquement sans avoir a appuyer sur votre bouton. 
 Creons notre scene : 
 
  
 Tout dabord nous creons un Timer sur un intervalle de temps toutes les 5 minutes 
 la condition sera alors 
 selectionner le Device virtuel + le bouton 
 Il faudra bien sur executer cette scene au demarrage du HC2 
 
  
 Le tour est joue sur notre box, revenons a ThingSpeak pour voir le resultat en cliquant sur Private view 
 
 En Conclusion 
 Cest du tout bon, vos temperatures remontent sous ThingSpeak et lhistorique saffiche parfaitement pour vos deux sondes. Voila donc une nouvelle application pour votre Home Center 2. 
 Si vous aussi vous utilisez ThingSpeak, nhesitez pas a nous faire partager vos experiences. 
 
 
 
 
 
 
 
(adsbygoogle = window.adsbygoogle || []).push({});
 
 

 Partager: Plus Imprimer Partager sur Tumblr E-mail WordPress: J'aime   chargement 
 
         Sur le meme theme 
                                                                                
                                                                         
        </text>
</document>
